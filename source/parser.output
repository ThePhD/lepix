   0  $accept : %entry% $end

   1  args_list :
   2            | expr
   3            | expr COMMA args_list

   4  type_name : INT
   5            | FLOAT
   6            | BOOL
   7            | VOID
   8            | type_name LSQUARE RSQUARE
   9            | type_name LSQUARE LSQUARE RSQUARE RSQUARE
  10            | type_name LSQUARE LSQUARE LSQUARE RSQUARE RSQUARE RSQUARE

  11  expr : ID
  12       | INTLITERAL
  13       | FLOATLITERAL
  14       | TRUE
  15       | FALSE
  16       | ID LSQUARE args_list RSQUARE
  17       | ID LPAREN args_list RPAREN
  18       | MINUS expr
  19       | NOT expr
  20       | expr TIMES expr
  21       | expr DIVIDE expr
  22       | expr PLUS expr
  23       | expr MINUS expr
  24       | expr LT expr
  25       | expr GT expr
  26       | expr LEQ expr
  27       | expr GEQ expr
  28       | expr NEQ expr
  29       | expr EQ expr
  30       | expr AND expr
  31       | expr OR expr
  32       | ID ASSIGN expr

  33  decl : VAR ID COLON type_name ASSIGN expr

  34  fun_decl : FUN ID LPAREN params_list RPAREN COLON type_name block

  35  params_list :
  36              | ID COLON type_name
  37              | ID COLON type_name COMMA params_list

  38  statement : expr_statement
  39            | branch_statement
  40            | iter_statement
  41            | ret_statement
  42            | jump_statement
  43            | fun_decl

  44  expr_statement : expr SEMI

  45  compound_statement :
  46                     | decl
  47                     | statement
  48                     | compound_statement SEMI decl SEMI
  49                     | compound_statement SEMI statement SEMI

  50  block : LBRACE compound_statement RBRACE

  51  parallel_block : block
  52                 | PARALLEL LPAREN args_list RPAREN block

  53  branch_statement : IF LPAREN expr RPAREN parallel_block
  54                   | IF LPAREN expr RPAREN parallel_block ELSE parallel_block

  55  iter_statement : WHILE LPAREN expr RPAREN parallel_block
  56                 | FOR LPAREN expr TO expr BY expr RPAREN parallel_block
  57                 | FOR LPAREN expr SEMI expr SEMI expr RPAREN parallel_block

  58  ret_statement : RETURN expr_statement

  59  jump_statement : BREAK SEMI
  60                 | CONTINUE SEMI

  61  %entry% : '\001' compound_statement

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . compound_statement  (61)
	compound_statement : .  (45)

	FUN  shift 3
	CONTINUE  shift 4
	BREAK  shift 5
	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	VAR  shift 10
	RETURN  shift 11
	IF  shift 12
	FOR  shift 13
	WHILE  shift 14
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	$end  reduce 45
	SEMI  reduce 45

	compound_statement  goto 18
	expr  goto 19
	decl  goto 20
	fun_decl  goto 21
	statement  goto 22
	expr_statement  goto 23
	branch_statement  goto 24
	iter_statement  goto 25
	ret_statement  goto 26
	jump_statement  goto 27


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	fun_decl : FUN . ID LPAREN params_list RPAREN COLON type_name block  (34)

	ID  shift 28
	.  error


state 4
	jump_statement : CONTINUE . SEMI  (60)

	SEMI  shift 29
	.  error


state 5
	jump_statement : BREAK . SEMI  (59)

	SEMI  shift 30
	.  error


state 6
	expr : MINUS . expr  (18)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 31


state 7
	expr : NOT . expr  (19)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 32


state 8
	expr : TRUE .  (14)

	.  reduce 14


state 9
	expr : FALSE .  (15)

	.  reduce 15


state 10
	decl : VAR . ID COLON type_name ASSIGN expr  (33)

	ID  shift 33
	.  error


state 11
	ret_statement : RETURN . expr_statement  (58)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 19
	expr_statement  goto 34


state 12
	branch_statement : IF . LPAREN expr RPAREN parallel_block  (53)
	branch_statement : IF . LPAREN expr RPAREN parallel_block ELSE parallel_block  (54)

	LPAREN  shift 35
	.  error


state 13
	iter_statement : FOR . LPAREN expr TO expr BY expr RPAREN parallel_block  (56)
	iter_statement : FOR . LPAREN expr SEMI expr SEMI expr RPAREN parallel_block  (57)

	LPAREN  shift 36
	.  error


state 14
	iter_statement : WHILE . LPAREN expr RPAREN parallel_block  (55)

	LPAREN  shift 37
	.  error


state 15
	expr : INTLITERAL .  (12)

	.  reduce 12


state 16
	expr : FLOATLITERAL .  (13)

	.  reduce 13


state 17
	expr : ID .  (11)
	expr : ID . LSQUARE args_list RSQUARE  (16)
	expr : ID . LPAREN args_list RPAREN  (17)
	expr : ID . ASSIGN expr  (32)

	LPAREN  shift 38
	LSQUARE  shift 39
	ASSIGN  shift 40
	$end  reduce 11
	SEMI  reduce 11
	RPAREN  reduce 11
	RBRACE  reduce 11
	COMMA  reduce 11
	RSQUARE  reduce 11
	TO  reduce 11
	BY  reduce 11
	PLUS  reduce 11
	MINUS  reduce 11
	TIMES  reduce 11
	DIVIDE  reduce 11
	EQ  reduce 11
	NEQ  reduce 11
	LT  reduce 11
	LEQ  reduce 11
	GT  reduce 11
	GEQ  reduce 11
	AND  reduce 11
	OR  reduce 11


state 18
	compound_statement : compound_statement . SEMI decl SEMI  (48)
	compound_statement : compound_statement . SEMI statement SEMI  (49)
	%entry% : '\001' compound_statement .  (61)

	SEMI  shift 41
	$end  reduce 61


state 19
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)
	expr_statement : expr . SEMI  (44)

	SEMI  shift 42
	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	OR  shift 54
	.  error


state 20
	compound_statement : decl .  (46)

	.  reduce 46


state 21
	statement : fun_decl .  (43)

	.  reduce 43


state 22
	compound_statement : statement .  (47)

	.  reduce 47


state 23
	statement : expr_statement .  (38)

	.  reduce 38


state 24
	statement : branch_statement .  (39)

	.  reduce 39


state 25
	statement : iter_statement .  (40)

	.  reduce 40


state 26
	statement : ret_statement .  (41)

	.  reduce 41


state 27
	statement : jump_statement .  (42)

	.  reduce 42


state 28
	fun_decl : FUN ID . LPAREN params_list RPAREN COLON type_name block  (34)

	LPAREN  shift 55
	.  error


state 29
	jump_statement : CONTINUE SEMI .  (60)

	.  reduce 60


state 30
	jump_statement : BREAK SEMI .  (59)

	.  reduce 59


state 31
	expr : MINUS expr .  (18)
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	.  reduce 18


state 32
	expr : NOT expr .  (19)
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	.  reduce 19


state 33
	decl : VAR ID . COLON type_name ASSIGN expr  (33)

	COLON  shift 56
	.  error


state 34
	ret_statement : RETURN expr_statement .  (58)

	.  reduce 58


state 35
	branch_statement : IF LPAREN . expr RPAREN parallel_block  (53)
	branch_statement : IF LPAREN . expr RPAREN parallel_block ELSE parallel_block  (54)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 57


state 36
	iter_statement : FOR LPAREN . expr TO expr BY expr RPAREN parallel_block  (56)
	iter_statement : FOR LPAREN . expr SEMI expr SEMI expr RPAREN parallel_block  (57)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 58


state 37
	iter_statement : WHILE LPAREN . expr RPAREN parallel_block  (55)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 59


state 38
	expr : ID LPAREN . args_list RPAREN  (17)
	args_list : .  (1)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	RPAREN  reduce 1

	args_list  goto 60
	expr  goto 61


state 39
	expr : ID LSQUARE . args_list RSQUARE  (16)
	args_list : .  (1)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	RSQUARE  reduce 1

	args_list  goto 62
	expr  goto 61


state 40
	expr : ID ASSIGN . expr  (32)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 63


state 41
	compound_statement : compound_statement SEMI . decl SEMI  (48)
	compound_statement : compound_statement SEMI . statement SEMI  (49)

	FUN  shift 3
	CONTINUE  shift 4
	BREAK  shift 5
	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	VAR  shift 10
	RETURN  shift 11
	IF  shift 12
	FOR  shift 13
	WHILE  shift 14
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 19
	decl  goto 64
	fun_decl  goto 21
	statement  goto 65
	expr_statement  goto 23
	branch_statement  goto 24
	iter_statement  goto 25
	ret_statement  goto 26
	jump_statement  goto 27


state 42
	expr_statement : expr SEMI .  (44)

	.  reduce 44


state 43
	expr : expr PLUS . expr  (22)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 66


state 44
	expr : expr MINUS . expr  (23)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 67


state 45
	expr : expr TIMES . expr  (20)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 68


state 46
	expr : expr DIVIDE . expr  (21)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 69


state 47
	expr : expr EQ . expr  (29)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 70


state 48
	expr : expr NEQ . expr  (28)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 71


state 49
	expr : expr LT . expr  (24)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 72


state 50
	expr : expr LEQ . expr  (26)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 73


state 51
	expr : expr GT . expr  (25)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 74


state 52
	expr : expr GEQ . expr  (27)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 75


state 53
	expr : expr AND . expr  (30)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 76


state 54
	expr : expr OR . expr  (31)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 77


state 55
	fun_decl : FUN ID LPAREN . params_list RPAREN COLON type_name block  (34)
	params_list : .  (35)

	ID  shift 78
	RPAREN  reduce 35

	params_list  goto 79


state 56
	decl : VAR ID COLON . type_name ASSIGN expr  (33)

	INT  shift 80
	BOOL  shift 81
	VOID  shift 82
	FLOAT  shift 83
	.  error

	type_name  goto 84


state 57
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)
	branch_statement : IF LPAREN expr . RPAREN parallel_block  (53)
	branch_statement : IF LPAREN expr . RPAREN parallel_block ELSE parallel_block  (54)

	RPAREN  shift 85
	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	OR  shift 54
	.  error


state 58
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)
	iter_statement : FOR LPAREN expr . TO expr BY expr RPAREN parallel_block  (56)
	iter_statement : FOR LPAREN expr . SEMI expr SEMI expr RPAREN parallel_block  (57)

	SEMI  shift 86
	TO  shift 87
	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	OR  shift 54
	.  error


state 59
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)
	iter_statement : WHILE LPAREN expr . RPAREN parallel_block  (55)

	RPAREN  shift 88
	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	OR  shift 54
	.  error


state 60
	expr : ID LPAREN args_list . RPAREN  (17)

	RPAREN  shift 89
	.  error


state 61
	args_list : expr .  (2)
	args_list : expr . COMMA args_list  (3)
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	COMMA  shift 90
	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	OR  shift 54
	RPAREN  reduce 2
	RSQUARE  reduce 2


state 62
	expr : ID LSQUARE args_list . RSQUARE  (16)

	RSQUARE  shift 91
	.  error


state 63
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)
	expr : ID ASSIGN expr .  (32)

	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	OR  shift 54
	$end  reduce 32
	SEMI  reduce 32
	RPAREN  reduce 32
	RBRACE  reduce 32
	COMMA  reduce 32
	RSQUARE  reduce 32
	TO  reduce 32
	BY  reduce 32


state 64
	compound_statement : compound_statement SEMI decl . SEMI  (48)

	SEMI  shift 92
	.  error


state 65
	compound_statement : compound_statement SEMI statement . SEMI  (49)

	SEMI  shift 93
	.  error


state 66
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr PLUS expr .  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	TIMES  shift 45
	DIVIDE  shift 46
	$end  reduce 22
	SEMI  reduce 22
	RPAREN  reduce 22
	RBRACE  reduce 22
	COMMA  reduce 22
	RSQUARE  reduce 22
	TO  reduce 22
	BY  reduce 22
	PLUS  reduce 22
	MINUS  reduce 22
	EQ  reduce 22
	NEQ  reduce 22
	LT  reduce 22
	LEQ  reduce 22
	GT  reduce 22
	GEQ  reduce 22
	AND  reduce 22
	OR  reduce 22


state 67
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr MINUS expr .  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	TIMES  shift 45
	DIVIDE  shift 46
	$end  reduce 23
	SEMI  reduce 23
	RPAREN  reduce 23
	RBRACE  reduce 23
	COMMA  reduce 23
	RSQUARE  reduce 23
	TO  reduce 23
	BY  reduce 23
	PLUS  reduce 23
	MINUS  reduce 23
	EQ  reduce 23
	NEQ  reduce 23
	LT  reduce 23
	LEQ  reduce 23
	GT  reduce 23
	GEQ  reduce 23
	AND  reduce 23
	OR  reduce 23


state 68
	expr : expr . TIMES expr  (20)
	expr : expr TIMES expr .  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	.  reduce 20


state 69
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr DIVIDE expr .  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	.  reduce 21


state 70
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr EQ expr .  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	$end  reduce 29
	SEMI  reduce 29
	RPAREN  reduce 29
	RBRACE  reduce 29
	COMMA  reduce 29
	RSQUARE  reduce 29
	TO  reduce 29
	BY  reduce 29
	EQ  reduce 29
	NEQ  reduce 29
	AND  reduce 29
	OR  reduce 29


state 71
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr NEQ expr .  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	$end  reduce 28
	SEMI  reduce 28
	RPAREN  reduce 28
	RBRACE  reduce 28
	COMMA  reduce 28
	RSQUARE  reduce 28
	TO  reduce 28
	BY  reduce 28
	EQ  reduce 28
	NEQ  reduce 28
	AND  reduce 28
	OR  reduce 28


state 72
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr LT expr .  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	$end  reduce 24
	SEMI  reduce 24
	RPAREN  reduce 24
	RBRACE  reduce 24
	COMMA  reduce 24
	RSQUARE  reduce 24
	TO  reduce 24
	BY  reduce 24
	EQ  reduce 24
	NEQ  reduce 24
	LT  reduce 24
	LEQ  reduce 24
	GT  reduce 24
	GEQ  reduce 24
	AND  reduce 24
	OR  reduce 24


state 73
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr LEQ expr .  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	$end  reduce 26
	SEMI  reduce 26
	RPAREN  reduce 26
	RBRACE  reduce 26
	COMMA  reduce 26
	RSQUARE  reduce 26
	TO  reduce 26
	BY  reduce 26
	EQ  reduce 26
	NEQ  reduce 26
	LT  reduce 26
	LEQ  reduce 26
	GT  reduce 26
	GEQ  reduce 26
	AND  reduce 26
	OR  reduce 26


state 74
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr GT expr .  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	$end  reduce 25
	SEMI  reduce 25
	RPAREN  reduce 25
	RBRACE  reduce 25
	COMMA  reduce 25
	RSQUARE  reduce 25
	TO  reduce 25
	BY  reduce 25
	EQ  reduce 25
	NEQ  reduce 25
	LT  reduce 25
	LEQ  reduce 25
	GT  reduce 25
	GEQ  reduce 25
	AND  reduce 25
	OR  reduce 25


state 75
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr GEQ expr .  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)

	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	$end  reduce 27
	SEMI  reduce 27
	RPAREN  reduce 27
	RBRACE  reduce 27
	COMMA  reduce 27
	RSQUARE  reduce 27
	TO  reduce 27
	BY  reduce 27
	EQ  reduce 27
	NEQ  reduce 27
	LT  reduce 27
	LEQ  reduce 27
	GT  reduce 27
	GEQ  reduce 27
	AND  reduce 27
	OR  reduce 27


state 76
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr AND expr .  (30)
	expr : expr . OR expr  (31)

	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	$end  reduce 30
	SEMI  reduce 30
	RPAREN  reduce 30
	RBRACE  reduce 30
	COMMA  reduce 30
	RSQUARE  reduce 30
	TO  reduce 30
	BY  reduce 30
	AND  reduce 30
	OR  reduce 30


state 77
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)
	expr : expr OR expr .  (31)

	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	$end  reduce 31
	SEMI  reduce 31
	RPAREN  reduce 31
	RBRACE  reduce 31
	COMMA  reduce 31
	RSQUARE  reduce 31
	TO  reduce 31
	BY  reduce 31
	OR  reduce 31


state 78
	params_list : ID . COLON type_name  (36)
	params_list : ID . COLON type_name COMMA params_list  (37)

	COLON  shift 94
	.  error


state 79
	fun_decl : FUN ID LPAREN params_list . RPAREN COLON type_name block  (34)

	RPAREN  shift 95
	.  error


state 80
	type_name : INT .  (4)

	.  reduce 4


state 81
	type_name : BOOL .  (6)

	.  reduce 6


state 82
	type_name : VOID .  (7)

	.  reduce 7


state 83
	type_name : FLOAT .  (5)

	.  reduce 5


state 84
	type_name : type_name . LSQUARE RSQUARE  (8)
	type_name : type_name . LSQUARE LSQUARE RSQUARE RSQUARE  (9)
	type_name : type_name . LSQUARE LSQUARE LSQUARE RSQUARE RSQUARE RSQUARE  (10)
	decl : VAR ID COLON type_name . ASSIGN expr  (33)

	LSQUARE  shift 96
	ASSIGN  shift 97
	.  error


state 85
	branch_statement : IF LPAREN expr RPAREN . parallel_block  (53)
	branch_statement : IF LPAREN expr RPAREN . parallel_block ELSE parallel_block  (54)

	LBRACE  shift 98
	PARALLEL  shift 99
	.  error

	block  goto 100
	parallel_block  goto 101


state 86
	iter_statement : FOR LPAREN expr SEMI . expr SEMI expr RPAREN parallel_block  (57)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 102


state 87
	iter_statement : FOR LPAREN expr TO . expr BY expr RPAREN parallel_block  (56)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 103


state 88
	iter_statement : WHILE LPAREN expr RPAREN . parallel_block  (55)

	LBRACE  shift 98
	PARALLEL  shift 99
	.  error

	block  goto 100
	parallel_block  goto 104


state 89
	expr : ID LPAREN args_list RPAREN .  (17)

	.  reduce 17


state 90
	args_list : expr COMMA . args_list  (3)
	args_list : .  (1)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	RPAREN  reduce 1
	RSQUARE  reduce 1

	args_list  goto 105
	expr  goto 61


state 91
	expr : ID LSQUARE args_list RSQUARE .  (16)

	.  reduce 16


state 92
	compound_statement : compound_statement SEMI decl SEMI .  (48)

	.  reduce 48


state 93
	compound_statement : compound_statement SEMI statement SEMI .  (49)

	.  reduce 49


state 94
	params_list : ID COLON . type_name  (36)
	params_list : ID COLON . type_name COMMA params_list  (37)

	INT  shift 80
	BOOL  shift 81
	VOID  shift 82
	FLOAT  shift 83
	.  error

	type_name  goto 106


state 95
	fun_decl : FUN ID LPAREN params_list RPAREN . COLON type_name block  (34)

	COLON  shift 107
	.  error


state 96
	type_name : type_name LSQUARE . RSQUARE  (8)
	type_name : type_name LSQUARE . LSQUARE RSQUARE RSQUARE  (9)
	type_name : type_name LSQUARE . LSQUARE LSQUARE RSQUARE RSQUARE RSQUARE  (10)

	LSQUARE  shift 108
	RSQUARE  shift 109
	.  error


state 97
	decl : VAR ID COLON type_name ASSIGN . expr  (33)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 110


state 98
	block : LBRACE . compound_statement RBRACE  (50)
	compound_statement : .  (45)

	FUN  shift 3
	CONTINUE  shift 4
	BREAK  shift 5
	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	VAR  shift 10
	RETURN  shift 11
	IF  shift 12
	FOR  shift 13
	WHILE  shift 14
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	SEMI  reduce 45
	RBRACE  reduce 45

	compound_statement  goto 111
	expr  goto 19
	decl  goto 20
	fun_decl  goto 21
	statement  goto 22
	expr_statement  goto 23
	branch_statement  goto 24
	iter_statement  goto 25
	ret_statement  goto 26
	jump_statement  goto 27


state 99
	parallel_block : PARALLEL . LPAREN args_list RPAREN block  (52)

	LPAREN  shift 112
	.  error


state 100
	parallel_block : block .  (51)

	.  reduce 51


state 101
	branch_statement : IF LPAREN expr RPAREN parallel_block .  (53)
	branch_statement : IF LPAREN expr RPAREN parallel_block . ELSE parallel_block  (54)

	ELSE  shift 113
	$end  reduce 53
	SEMI  reduce 53
	RBRACE  reduce 53


state 102
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)
	iter_statement : FOR LPAREN expr SEMI expr . SEMI expr RPAREN parallel_block  (57)

	SEMI  shift 114
	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	OR  shift 54
	.  error


state 103
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)
	iter_statement : FOR LPAREN expr TO expr . BY expr RPAREN parallel_block  (56)

	BY  shift 115
	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	OR  shift 54
	.  error


state 104
	iter_statement : WHILE LPAREN expr RPAREN parallel_block .  (55)

	.  reduce 55


state 105
	args_list : expr COMMA args_list .  (3)

	.  reduce 3


state 106
	type_name : type_name . LSQUARE RSQUARE  (8)
	type_name : type_name . LSQUARE LSQUARE RSQUARE RSQUARE  (9)
	type_name : type_name . LSQUARE LSQUARE LSQUARE RSQUARE RSQUARE RSQUARE  (10)
	params_list : ID COLON type_name .  (36)
	params_list : ID COLON type_name . COMMA params_list  (37)

	COMMA  shift 116
	LSQUARE  shift 96
	RPAREN  reduce 36


state 107
	fun_decl : FUN ID LPAREN params_list RPAREN COLON . type_name block  (34)

	INT  shift 80
	BOOL  shift 81
	VOID  shift 82
	FLOAT  shift 83
	.  error

	type_name  goto 117


state 108
	type_name : type_name LSQUARE LSQUARE . RSQUARE RSQUARE  (9)
	type_name : type_name LSQUARE LSQUARE . LSQUARE RSQUARE RSQUARE RSQUARE  (10)

	LSQUARE  shift 118
	RSQUARE  shift 119
	.  error


state 109
	type_name : type_name LSQUARE RSQUARE .  (8)

	.  reduce 8


state 110
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)
	decl : VAR ID COLON type_name ASSIGN expr .  (33)

	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	OR  shift 54
	$end  reduce 33
	SEMI  reduce 33
	RBRACE  reduce 33


state 111
	compound_statement : compound_statement . SEMI decl SEMI  (48)
	compound_statement : compound_statement . SEMI statement SEMI  (49)
	block : LBRACE compound_statement . RBRACE  (50)

	SEMI  shift 41
	RBRACE  shift 120
	.  error


state 112
	parallel_block : PARALLEL LPAREN . args_list RPAREN block  (52)
	args_list : .  (1)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	RPAREN  reduce 1

	args_list  goto 121
	expr  goto 61


state 113
	branch_statement : IF LPAREN expr RPAREN parallel_block ELSE . parallel_block  (54)

	LBRACE  shift 98
	PARALLEL  shift 99
	.  error

	block  goto 100
	parallel_block  goto 122


state 114
	iter_statement : FOR LPAREN expr SEMI expr SEMI . expr RPAREN parallel_block  (57)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 123


state 115
	iter_statement : FOR LPAREN expr TO expr BY . expr RPAREN parallel_block  (56)

	MINUS  shift 6
	NOT  shift 7
	TRUE  shift 8
	FALSE  shift 9
	INTLITERAL  shift 15
	FLOATLITERAL  shift 16
	ID  shift 17
	.  error

	expr  goto 124


state 116
	params_list : ID COLON type_name COMMA . params_list  (37)
	params_list : .  (35)

	ID  shift 78
	RPAREN  reduce 35

	params_list  goto 125


state 117
	type_name : type_name . LSQUARE RSQUARE  (8)
	type_name : type_name . LSQUARE LSQUARE RSQUARE RSQUARE  (9)
	type_name : type_name . LSQUARE LSQUARE LSQUARE RSQUARE RSQUARE RSQUARE  (10)
	fun_decl : FUN ID LPAREN params_list RPAREN COLON type_name . block  (34)

	LBRACE  shift 98
	LSQUARE  shift 96
	.  error

	block  goto 126


state 118
	type_name : type_name LSQUARE LSQUARE LSQUARE . RSQUARE RSQUARE RSQUARE  (10)

	RSQUARE  shift 127
	.  error


state 119
	type_name : type_name LSQUARE LSQUARE RSQUARE . RSQUARE  (9)

	RSQUARE  shift 128
	.  error


state 120
	block : LBRACE compound_statement RBRACE .  (50)

	.  reduce 50


state 121
	parallel_block : PARALLEL LPAREN args_list . RPAREN block  (52)

	RPAREN  shift 129
	.  error


state 122
	branch_statement : IF LPAREN expr RPAREN parallel_block ELSE parallel_block .  (54)

	.  reduce 54


state 123
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)
	iter_statement : FOR LPAREN expr SEMI expr SEMI expr . RPAREN parallel_block  (57)

	RPAREN  shift 130
	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	OR  shift 54
	.  error


state 124
	expr : expr . TIMES expr  (20)
	expr : expr . DIVIDE expr  (21)
	expr : expr . PLUS expr  (22)
	expr : expr . MINUS expr  (23)
	expr : expr . LT expr  (24)
	expr : expr . GT expr  (25)
	expr : expr . LEQ expr  (26)
	expr : expr . GEQ expr  (27)
	expr : expr . NEQ expr  (28)
	expr : expr . EQ expr  (29)
	expr : expr . AND expr  (30)
	expr : expr . OR expr  (31)
	iter_statement : FOR LPAREN expr TO expr BY expr . RPAREN parallel_block  (56)

	RPAREN  shift 131
	PLUS  shift 43
	MINUS  shift 44
	TIMES  shift 45
	DIVIDE  shift 46
	EQ  shift 47
	NEQ  shift 48
	LT  shift 49
	LEQ  shift 50
	GT  shift 51
	GEQ  shift 52
	AND  shift 53
	OR  shift 54
	.  error


state 125
	params_list : ID COLON type_name COMMA params_list .  (37)

	.  reduce 37


state 126
	fun_decl : FUN ID LPAREN params_list RPAREN COLON type_name block .  (34)

	.  reduce 34


state 127
	type_name : type_name LSQUARE LSQUARE LSQUARE RSQUARE . RSQUARE RSQUARE  (10)

	RSQUARE  shift 132
	.  error


state 128
	type_name : type_name LSQUARE LSQUARE RSQUARE RSQUARE .  (9)

	.  reduce 9


state 129
	parallel_block : PARALLEL LPAREN args_list RPAREN . block  (52)

	LBRACE  shift 98
	.  error

	block  goto 133


state 130
	iter_statement : FOR LPAREN expr SEMI expr SEMI expr RPAREN . parallel_block  (57)

	LBRACE  shift 98
	PARALLEL  shift 99
	.  error

	block  goto 100
	parallel_block  goto 134


state 131
	iter_statement : FOR LPAREN expr TO expr BY expr RPAREN . parallel_block  (56)

	LBRACE  shift 98
	PARALLEL  shift 99
	.  error

	block  goto 100
	parallel_block  goto 135


state 132
	type_name : type_name LSQUARE LSQUARE LSQUARE RSQUARE RSQUARE . RSQUARE  (10)

	RSQUARE  shift 136
	.  error


state 133
	parallel_block : PARALLEL LPAREN args_list RPAREN block .  (52)

	.  reduce 52


state 134
	iter_statement : FOR LPAREN expr SEMI expr SEMI expr RPAREN parallel_block .  (57)

	.  reduce 57


state 135
	iter_statement : FOR LPAREN expr TO expr BY expr RPAREN parallel_block .  (56)

	.  reduce 56


state 136
	type_name : type_name LSQUARE LSQUARE LSQUARE RSQUARE RSQUARE RSQUARE .  (10)

	.  reduce 10


53 terminals, 17 nonterminals
62 grammar rules, 137 states
